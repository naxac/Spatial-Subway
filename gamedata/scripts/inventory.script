-- -*- mode: lua; encoding: windows-1251 -*-
need_update = true

local belt = {}
local belt_id = {}

local belt_status = false
local inventory_open = false
local separator_spawned = nil
local separator = "separator"
local flag = false

function update(time)
	teleportator.update(time)
	
	if (need_update == false) then return end

	belt_status = false

	local actor = db.actor
	-- Спавним разделяющий елемент
	if (separator_spawned == nil) then
		local se_obj = alife():create(separator,
			actor:position(),
			actor:level_vertex_id(),
			actor:game_vertex_id(),
			actor:id())
		separator_spawned = se_obj.id
		return
	end

	belt = {}
	belt_id = {}
	flag = false

	-- Сканируем инвентарь
	actor:inventory_for_each(scan_inv)
	
	need_update = false
	del_separator()
	belt_status = true
end

-- Удаляем разделяющий елемент
function del_separator()
	if separator_spawned then
		local se_obj = alife():object(separator_spawned)
		if se_obj then alife():release(se_obj, true) end
	end
	separator_spawned = nil
end

-- Перебор предметов инвентаря
function scan_inv(item)
	local section = item:section()

	if section == separator then
		flag = true
		return
	end

	if flag then
		if slot_item(item) ~= nil then
			flag = false
		else
			belt[section] = ( belt[section] or 0 ) + 1
			belt_id[item:id()] = true
		end
	end
end

-- Определение налечия предмета в одном из слотов
function slot_item(item)
	local obj
	for i = 0, 12 do
		obj = db.actor:item_in_slot(i)
		if obj and item:id() == obj:id() then
			return i
		end
	end

	return nil
end

-- Поднятие предмета
function on_item_take(item)
	if item:section() == separator then return end

	if (inventory_open == false) then
		del_separator()
		need_update = true
	end
end

-- Выброс предмета
function on_item_drop(item)
	if item:section() == separator then return end

	if (inventory_open == false) then
		del_separator()
		need_update = true
	end
end

-- Открытие/закрытие инвентаря
locsl inventory_info = {
	ui_inventory = true, ui_inventory_hide = false,
	ui_car_body = true,   ui_car_body_hide = false,
	ui_trade = true,        ui_trade_hide = false
}
function on_inventory_info(info_id)
	local f = inventory_info[info_id]
	if f == nil then return end

	inventory_open = f
	if not f then
		need_update = true
	end
end

----------------------------------------------------------------
-- предмет на поясе (проверка по секции)
function on_belt(sect)
	return belt[sect]
end

-- предмет на поясе (проверка по game_object)
function item_on_belt(item)
	return belt_id[item:id()]~=nil
end

-- общее кол-во предметов на поясе
function belt_count()
	local n = 0
	for _ in pairs(belt_id) do
		n = n + 1
	end
	return n
end

-- проверка наличия артефактов на поясе
function has_arts_on_belt()
	local art_clsids = {[clsid.artefact_s] = true, [clsid.artefact] = true}
	local sys_ini = system_ini()
	for k,v in pairs(belt) do
		if art_clsids[sys_ini:r_clsid(k, 'class')] then
			return true
		end
	end
	return false
end
