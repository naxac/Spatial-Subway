-- -*- mode: lua; encoding: windows-1251 -*-
local function log(fmt, ...)
	get_console():execute("load ~ "..script_name().." : "..string.format(fmt, ...))
	get_console():execute("flush")
end

local anom_classes = {
	[clsid.zone_bfuzz] = true,
	[clsid.zone_bfuzz_s] = true,
	[clsid.zone_galantine] = true,
	[clsid.zone_galant_s] = true,
	[clsid.zone_mbald_s] = true,
	[clsid.zone_mincer] = true,
	[clsid.zone_mincer_s] = true,
	[clsid.zone_mosquito_bald] = true
}

-- читаем, что спавнить и с какой вероятностью, из конфигов аномалий
function spawn_artefacts()
	local obj, sect
	local sim, gg = alife(), game_graph()
	loval lname = level.name()
	local sys_ini = system_ini()
	for i = 1, 65534 do
		obj = sim:object(i)
		if obj and anom_classes[obj:clsid()]
			and math.random() > 0.4
		then
			if sim:level_name(gg:vertex(obj.m_game_vertex_id):level_id()) ~= lname then
				sect = obj:section_name()
				-- log("spawn_artefacts: %s", obj:name())
				if sys_ini:r_float(sect, "BirthProbability")>math.random() then
					local arts = sys_ini:r_string(sect, "artefacts")
					local prob = {}
					-- log("arts = %s", arts)
					for a, n in string.gmatch(arts, "([%w_%-]+)%s*,%s*([%d%.]+)") do
						prob[a] = tonumber(n)
						-- log("prob: [%s] = %s", a, n)
					end
					for k,v in pairs(prob)do
						if v > math.random() then
							local sobj = alife():create(k, obj.position:add(vector():set(0,1,0)),
									obj.m_level_vertex_id, obj.m_game_vertex_id)
							-- level.map_add_object_spot_ser(sobj.id, "red_location", sobj:name())
							-- log("spawn "..sobj:name())
							this.del_ai_flag(sobj)
						end
					end
				end
			end
		end
	end
end

-- чтобы арты под текстуры не проваливались
function del_ai_flag( obj )
	if obj == nil then return end

	local pk = net_packet()
	pk:w_begin( 0 )
	obj:STATE_Write( pk )
	pk:r_seek( 2 )

	local data = {}
	-- cse_alife_object
	teleportator.read_cse_alife_object( data, pk )
	-- cse_visual
	data.visual_name  = pk:r_stringZ()
	data.visual_flags   = pk:r_u8()
	-- cse_alife_item
	data.condition       = pk:r_float()

	-- сбрасываем флаг "UsedAi_Locations"
	data.object_flags = bit_and( data.object_flags, bit_not(128) )

	pk:w_begin( 0 )
	-- cse_alife_object
	teleportator.write_cse_alife_object( data, pk )
	-- cse_visual
	pk:w_stringZ ( data.visual_name )
	pk:w_u8        ( data.visual_flags )
	-- cse_alife_item
	pk:w_float    ( data.condition )

	pk:r_seek( 2 )
	obj:STATE_Read( pk, pk:w_tell() )
end
